/* CSS Grid Layout In One Video | Complete Web Development Course #26 */
/* grid container: grid container becomes by setting the setting the display property to "grid";
1.gap:
2.grid-template-columns:(change width of columns)
3.grid-template-rows:(change height of the rows)
4.justify-content:(set all elements horizontally)
5.align-content:(set all of them vertically)
6.align-items:align items inside small steched container.

 
*/
/* grid child items: properties=>
1.justify-self :(set the  particular child horizontally ) 
2.align-self:(set the particular child vertically)
3.grid-column:how much width of child  in a row
4.grid-row:how much height of child in a column.
5.grid-area:defines grid column and grid row simaltaneously,
 */

/*  7.grid -template-area:Named grid items can be refferd to by the grid template areas property of the grid container.
            the grid area property can also used to assign names to grid items. 
 */

* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}
.container {
  border: 2px solid red;
  display: grid;
  /* gap: 10px; (meant for row only)*/
  /* grid-row-gap: 20px; */
  grid-gap: 20px;
  column-gap: 5px;
  /* grid-template-columns is use to define the width of the columns; */
  /*grid-template-columns: 100px 200px 300px;*/ /*20vw 200px 300px*/

  /* grid-template-columns: 20% 80%;*/
  /*grid-template-columns: 2fr 1fr 1fr 1fr;*/ /*fr is resposive as screen size changes.automatically adjust. */
  /* grid-template-columns: repeat(4, 1fr); */
  /*^^short hand function)*/
  /* grid-template-columns: repeat(auto-fill, 100px);*/
  /* grid-template-columns: auto auto; */
  /* same as 1fr 1fr. */
  /* grid-template-columns: 200px auto; */

  /* it means 1st columns will be of 200px and second column will be automatically adjusted. */
  /* grid-template-columns: 200px 200px 200px; */
  /* //--------------------------------------- */
  /* grid template rows is use to define the height of the rows. */
  /* grid-template-rows: 200px 80px; */
  /* given are heights of starting two rows,else have given paddding of 12px. */
  /* grid-auto-rows: 150px; */
  /* 150px are the height of all other lefted rows(3,4,5th row )*/
}
.container {
  /* justify karne se horizontally move,
    align karne se vertically move.*/

  /* The justify-content property aligns the flexible container's items when the items do not use all available space on the main-axis (horizontally). */
  /* justify-content: start; */
  /* this is default value */

  /* justify-content: center; */

  /* grid-template-columns: 1fr 1fr; */
  /* dont use justify-content when defined by using fr kyunki fr puri space automatically divide karta h */
}

.container {
  /* defaultly align-content value is stretch ,means child will automatically strecth their heights as per height of parent,vice-versa. */
  height: 600px;
  /* align-content: center; */
  /* align content inside .container means parent. */
  /* align-items: center; */
  /* The align-items property specifies the default alignment for items inside the flexible container{.container ki bat nhi kar rha ye}(jo container stecth time par banta h,coding shuttle with anuj bhaiya #26,16:50.) */
  /* align-items: start; */
}
.box {
  border: 2px solid green;
  padding: 12px;
}

#box-1 {
  background-color: bisque;
  /* justify-self: start; */
  /* justify-self: center;
  align-self: end; */
  /* align items is moving all items as it is property of parent/.container ; */
  /* //----------------------- */

  /* grid-column-start: 1; */
  /* grid-column-end: 3; here 3 is the no. of column .inspect style>layout .div containers.*/
  /* ^ to cover 2boxes; watch the video for further clarification.  */

  /* grid-column-end: 5; */
  /* if g-c-e:5 means box 1 will cover columns of space ,but we have defined only width to three columns in line no. 42 grid template columns,hence it will automatically take 4th space and not follow grid-template-columns any more.;  */
  /* bache hue space ko hi agla column bana dega. */

  /* short hand method, below------------------- */
  /* grid-column: 1 / 3; */
  /* here 1 and 3 are column no. */
  /* grid-column: 1 / span 3; */
  /* span defines the space ,boxes,span 3 means it will cover 3boxesfrom column 1. */
  /* ----------------------------------------- */
  /* negative number bhi hote columns no as rigth most will have -1,second last: -2 .*/
  /* grid-column: 1/-1; */
}

/* same rules for grid-row as of grid columns.. */
#box-1 {
  /* margin-bottom: 30px; */
  /* grid-row-start: 1; */
  /* grid-row-end: 5; */
  /* grid-row: 1 / 5; */
  /* grid-row: 1 / span 4; */
  /* grid-area: 1 / 1/ 3/ 3; */
  /* r/c/r/c */
  /* row start no. /colmn start no. /row end no. /colmn end no.  */
}
.container {
  grid-template-areas:
    "hdr hdr hdr hdr"
    "sbr main main main"
    "sbr main main main"
    "ftr ftr ftr logo";
}
#box-1 {
  grid-area: hdr;
}
#box-2 {
  /* margin-bottom: 30px; */
  grid-area: sbr;
}
#box-3 {
  grid-area: main;
}
#box-4 {
  grid-area: ftr;
}
#box-5 {
  grid-area: logo;
  border-radius: 5%;
}
/* these all(layout) will exactly arrange as shown in grid area template. */
/* boxes 6,7,8,9,10 will remain same as not edited.*/

#hi {
  background-color: yellow;
  width: 2rem;
  height: 2rem;
  position: absolute;
  bottom: 0px;
  left: 0px;
}
