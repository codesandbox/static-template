/* CSS variables */

:root {
	--gap: 2.127659574%;
	--default-drag-n-drop-gutter: 1.875rem;
	--section-horizontal-padding: 1.875rem;
	--section-vertical-padding: 6.25rem;
}

/**
* The grid layout system is based on the 3 levels:
 => section-container: Sets the width of the sections and the vertical padding of the sections
 => row-fluid: Acts as a container for the grid, it takes the whole width of the section, align elements to the left, space them according to the gutter
		and dictate the behavior on screen resizing (elements shrink on desktop and wrap on tablet/mobile)
 => spanX: Set the width of the elements inside the grid. From span1 to span12 on desktop and tablet-span1 to tablet-span8 on tablet, 
		 mobile-span1 set the element to 50% width on mobile. The width is calculated dynamically, a percent value representing the grid column width and the gutter width.
		 .i.e. spanX => calc( (span1Width % * X) + (gutterWidth * (X-1)))
**/

.section {
	width: 100vw;
	display: flex;
	flex-direction: column;
	align-items: center;
}

:where([data-background='primary']) {
	background-color: var(--bg-primary-tint-1);
}

:where([data-background='grey']) {
	background-color: var(--placeholder);
}

/* Section Container */

.section-container {
	width: calc(100vw - 3.75rem);
	max-width: 1110px;
	padding-top: var(--section-vertical-padding);
	padding-bottom: var(--section-vertical-padding);
	/* gap: var(--default-drag-n-drop-gutter); */
	display: flex;
	flex-direction: column;
}

@media screen and (max-width: 768px) {
	.section-container {
		padding-top: 75px;
		padding-bottom: 75px;
	}
}

/* The default behavior of rows is nowrap, add the below wrap class to force the wrap behavior */

.never-wrap {
	flex-wrap: nowrap !important;
}

/* Mobile layout == 2 Columns Grid*/

.row-fluid {
	display: flex;
	flex-wrap: wrap;
	width: 100%;
	justify-content: flex-start;
	gap: var(--default-drag-n-drop-gutter);
}

.row-fluid [class*='span'] {
	min-height: 1px;
	width: 100%;
}

.row-fluid [class*='mobile-span1'] {
	width: calc(50% - var(--default-drag-n-drop-gutter) / 2);
}

/* Tablet layout == 8 Columns Grid */

@media (min-width: 560px) {
	:root {
		/* From 560px width to 992px width, the gutter will proportionaly grow from 16px to 30px */
		--default-drag-n-drop-gutter: clamp(1rem, calc(1rem + ((1vw - 0.35rem) * 3.2407)), 1.875rem);
	}

	.row-fluid [class*='tablet-span1'] {
		width: 9.65%;
	}

	.row-fluid [class*='tablet-span2'] {
		width: calc((9.65% * 2) + (1 * var(--default-drag-n-drop-gutter)));
	}

	.row-fluid [class*='tablet-span3'] {
		width: calc((9.65% * 3) + (2 * var(--default-drag-n-drop-gutter)));
	}

	.row-fluid [class*='tablet-span4'] {
		width: calc((9.65% * 4) + (3 * var(--default-drag-n-drop-gutter)));
	}

	.row-fluid [class*='tablet-span5'] {
		width: calc((9.65% * 5) + (4 * var(--default-drag-n-drop-gutter)));
	}

	.row-fluid [class*='tablet-span6'] {
		width: calc((9.65% * 6) + (5 * var(--default-drag-n-drop-gutter)));
	}

	.row-fluid [class*='tablet-span7'] {
		width: calc((9.65% * 7) + (6 * var(--default-drag-n-drop-gutter)));
	}

	.row-fluid [class*='tablet-span8'] {
		width: 100%;
	}
}

/* Desktop layout == 12 Columns Grid */

@media (min-width: 992px) {
	:root {
		--default-drag-n-drop-gutter: 1.875rem;
	}

	.row-fluid {
		flex-wrap: nowrap;
	}

	.row-fluid [class*='tablet-span'] {
		width: unset;
	}

	.row-fluid .span11 {
		width: calc((5.856% * 11) + (10 * var(--default-drag-n-drop-gutter)));
	}

	.row-fluid .span10 {
		width: calc((5.856% * 10) + (9 * var(--default-drag-n-drop-gutter)));
	}

	.row-fluid .span9 {
		width: calc((5.856% * 9) + (8 * var(--default-drag-n-drop-gutter)));
	}

	.row-fluid .span8 {
		width: calc((5.856% * 8) + (7 * var(--default-drag-n-drop-gutter)));
	}

	.row-fluid .span7 {
		width: calc((5.856% * 7) + (6 * var(--default-drag-n-drop-gutter)));
	}

	.row-fluid .span6 {
		width: calc((5.856% * 6) + (5 * var(--default-drag-n-drop-gutter)));
	}

	.row-fluid .span5 {
		width: calc((5.856% * 5) + (4 * var(--default-drag-n-drop-gutter)));
	}

	.row-fluid .span4 {
		width: calc((5.856% * 4) + (3 * var(--default-drag-n-drop-gutter)));
	}

	.row-fluid .span3 {
		width: calc((5.856% * 3) + (2 * var(--default-drag-n-drop-gutter)));
	}

	.row-fluid .span2 {
		width: calc((5.856% * 2) + (1 * var(--default-drag-n-drop-gutter)));
	}

	.row-fluid .span1 {
		width: calc((5.856% * 1) + (0 * var(--default-drag-n-drop-gutter)));
	}
}

/* CSS GRID LAYOUT */

.grid {
	display: grid;
}

.grid-autofill {
	width: calc(100% - var(--section-horizontal-padding) * 2);
	display: grid;
	grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
	grid-auto-flow: row dense;
}

.grid-centered {
	justify-content: center;
	align-content: center;
	align-items: center;
}
